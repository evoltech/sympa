#!/usr/bin/ruby

=begin
merge the arctxt of two archive trees
=end

source = '/crypt/sympa/arc'
dest = '/crypt2/sympa/arc'

def cmd(torun)
  system(torun)
#  puts(torun)
end

def build_file_hash(glob)
  files = {}
  Dir[glob].each do |filepath|
    filename = File.basename(filepath)
    files[filename] ||= {}
    files[filename][:md5] = `md5sum #{filepath}`.split(' ').first
    files[filename][:filename] = filepath
  end
  files
end


#
# from
#   files_a = {'1' => {:filename => '/path/to/file', :md5 => '261df124'}, '2' => ...
#   files_b = {'1' => {:filename => '/path/to/file', :md5 => '261df124'}, '2' => ...
# produces
#   ['/path/to/file/1','/path/to/file/2']
#

def merge(files_a, files_b)
  result = []
  files_a.keys.sort_by{|i|i.to_i}.each do |key|
    if files_b[key].nil? 
      # not in b
      result << files_a[key][:filename]
    elsif files_b[key][:md5] == files_a[key][:md5]
      # same in b an a
      result << files_a[key][:filename]
    else
      # same filename in each, but different hash, add both
      puts 'CONFLICT!!!!!!!!!!!!! %s %s' % [ files_a[key][:filename], files_b[key][:filename] ]
      result << files_a[key][:filename]
      result << files_b[key][:filename]
    end
  end
  # now grab files in b but not in a
  files_b.keys.sort.each do |key|
    if files_a[key].nil?
      result << files_b[key][:filename]
    end
  end
  result
end


def merge_arctext_to(destbase)
  puts Dir.pwd
  Dir['*'].each do |month|
    next unless File.directory? month
    Dir.chdir(month) do
      next unless File.exists?('arctxt')
      files_b = nil
      dest_month_dir = [destbase,month].join('/')
      if !File.exists?(dest_month_dir)
        cmd "cp -avi #{Dir.pwd} #{dest_month_dir}"
        next
      end
      Dir.chdir(dest_month_dir) do
        File.rename('arctxt', 'arctxt-old') if (File.exists?('arctxt') and !File.exists?('arctxt-old'))
        Dir.mkdir('arctxt') unless File.exists?('arctxt')
        files_b = build_file_hash( [Dir.pwd, 'arctxt-old','*'].join('/') )
      end
      files_a = build_file_hash( [Dir.pwd, 'arctxt','*'].join('/') )
#      puts files_a.inspect
#      puts files_b.inspect
      merged_files = merge(files_a, files_b)
      Dir.chdir('arctxt') do
        merged_files.each_with_index do |source_file_path, dest_file|
          dest_file_path = [destbase,month,'arctxt',dest_file+1].join('/')
          unless File.exists?(dest_file_path)
            cmd "cp -avi #{source_file_path} #{dest_file_path}"
          end
        end
      end
    end
  end
end

def randomize(array)
  array.sort{|a,b| rand(3)-1}
end

completed_count = 0
Dir.chdir(source) do
  randomize(Dir['*']).each do |listdir|
    next unless File.directory? listdir
    Dir.chdir(listdir) do
      merge_arctext_to( [dest, listdir].join('/') )
      puts "COMPLETED %s" % (completed_count+=1)
    end
  end
end
