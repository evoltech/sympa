#!/usr/bin/perl -w
# changescenari - do a search and replace on every config file.
# edit the $listdir and $replacements to configure
# originally by elijah in php4
# rewritten in perl by taggart 2012-02

use Getopt::Std;
$Getopt::Std::STANDARD_HELP_VERSION="true";

use vars qw($opt_d);

getopts('d');

sub HELP_MESSAGE {
  print "Usage: changescenari [-d] <user>\n";
  print "     -d  : actually change things\n";
  print "BE CAREFUL! Run without -d and review what it will do first!\n";
}

my $listdir='/home/sympa/expl/*';
my $tmpdir='/home/sympa/tmp';

# create hash of replacements
%replacements = (
	'd_edit editor' => 'd_edit editors',
	'd_edit owner' => 'd_edit owners',
	'd_edit private' => 'd_edit members',
# DONE
#	'del auth' => 'del verified',
#	'del owner' => 'del verified',
#	'del owner_notify' => 'del verified_notify',
#	'add auth' => 'add verified',
#	'add owner' => 'add verified',
#	'add owner_notify' => 'add verified_notify'
#	'invite default' => 'invite closed',
#	'invite public' => 'invite anyone',
#	'invite owner' => 'invite owners',
#	'invite private' => 'invite members',
#	'invite impossible' => 'invite closed',
#	'subscribe open' => 'subscribe verified',
#	'subscribe open_notify' => 'subscribe verified_notify',
#	'subscribe open_quiet' => 'subscribe verified',
#	'subscribe auth' => 'subscribe verified',
#	'subscribe auth_notify' => 'subscribe verified_notify',
#	'subscribe auth_owner' => 'subscribe verified_approved',
#	'subscribe approved' => 'subscribe verified_approved',
#	'subscribe approved_verified' => 'subscribe verified_approved',
#	'subscribe intranet' => 'subscribe verified',
#	'subscribe intranetorowner' => 'subscribe verified_approved',
#	'subscribe anyone_notify' => 'subscribe verified_notify'
#	'subscribe impossible' => 'subscribe closed',
#	'subscribe smime' => 'subscribe verified',
#	'subscribe smimeorowner' => 'subscribe verified_approved',
#	'subscribe owner' => 'subscribe verified_approved',
#	'unsubscribe open' => 'unsubscribe anyone',
#	'unsubscribe open_notify' => 'unsubscribe anyone_notify',
#	'unsubscribe notify' => 'unsubscribe anyone_notify',
#	'unsubscribe auth' => 'unsubscribe verified',
#	'unsubscribe auth_notify' => 'unsubscribe verified_notify'
);

# get list of configs
$output=qx(find $listdir -name config);

@configs = split /\n/,$output;

foreach $config (@configs) {

  $list=$config;
  $list =~ s:^.*/(.*?)/config:$1:;

  open(OLD,"$config") || die "ERROR: cannot open $config\n";

  # we're not going to make a new version until we have a reason to
  $newversion = 0;
  # reset the array we store the temp file in
  undef @new;

  while (<OLD>) {
    # we haven't yet made a substitution
    $submade = 0;

    foreach $line (keys %replacements) {
      if ( /^$line$/ ) {
        print "NOTE: found '$line' in $list\n";
        print "  replacing with '$replacements{$line}'\n";
        # we're creating a new config file
        $newversion = 1;
        # and we've made a substitution for the current line
        $submade = 1;
        push @new,"$replacements{$line}\n";
        last;
      }
    }  
    # if we didn't do a substitution, save the line as is
    if (!$submade) {
        push @new,$_;
    }
  }
  close OLD;

  # only do it if the user specified -d
  if ($opt_d) {
    if ($newversion) {
      # write the new version to a temp file
      die "ERROR: $config.new exists!\n" if ( -e "$config.new" );
      open(NEW,">$config.new") || die "ERROR: cannot open $config.new\n";
      print NEW @new;
      close NEW;
      # move it in place
      rename "$config.new", $config || die "ERROR: cannot move $config.new into place\n";
      # tell sympa to update the config.bin for the list
      #qx(/home/sympa/bin/sympa.pl --reload_list_config --list=$list@lists.riseup.net)
    }
  }
}

if (! $opt_d and $newversion) {
    print "WARNING: didn't actually make any changes. Review the above and when you\n";
    print "  are ready to run for real add the -d flag\n";
}

# changing scenari shouldn't update anything in the list table, but if you
#  need to sync use this
#/home/sympa/bin/sympa.pl --sync_list_db
